{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["synth","Tone","toMaster","App","useState","keyVal","setKey","note","setNote","className","onChange","e","target","value","onClick","console","log","triggerAttackRelease","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAIMA,GAAQ,IAAIC,KAAqBC,WAmDxBC,MAhDf,WAEE,IAFa,EA+BYC,mBAAS,MA/BrB,mBA+BNC,EA/BM,KA+BEC,EA/BF,OAgCWF,mBAAS,KAhCpB,mBAgCNG,EAhCM,KAgCAC,EAhCA,KAmCb,OACE,sBAAKC,UAAU,MAAf,UACA,sBAAKA,UAAU,aAAf,UACA,sBAAKA,UAAU,YAAf,uCAAqD,uBAAOA,UAAU,YAAYC,SAf1D,SAACC,GACzBL,EAAOK,EAAEC,OAAOC,aAehB,sBAAKJ,UAAU,aAAf,yCAAwD,uBAAOA,UAAU,YAAYC,SAZ9D,SAACC,GACxBH,EAAQG,EAAEC,OAAOC,gBAaf,oBAAIJ,UAAU,WAAd,mCACA,yBAAQA,UAAU,aAAaK,QAxCjB,WAGhBC,QAAQC,IAAI,YACZD,QAAQC,IAAI,CAACX,WAED,OAATA,EACHL,EAAMiB,qBAAqB,KAAKV,GAEjB,OAATF,EACNL,EAAMiB,qBAAqB,KAAKV,GAGhCP,EAAMiB,qBAAqBZ,EAAOE,IA2BhC,mBAA0DF,EAA1D,QAAuEE,SCrC9DW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6b794f33.chunk.js","sourcesContent":["import './App.css';\nimport * as Tone from \"tone\";\nimport React, {useState, useEffect} from \"react\";\n\nconst synth = new Tone.MembraneSynth().toMaster();\n\n\nfunction App() {\n\n  const playSynth = () => {\n\n    // Value\n    console.log(\"+======+\");\n    console.log({keyVal});\n\n    if(keyVal===\"C9\"){\n    synth.triggerAttackRelease(\"C9\",note);\n  }\n  else if(keyVal===\"C8\"){\n    synth.triggerAttackRelease(\"C8\",note);\n  }\n  else{\n    synth.triggerAttackRelease(keyVal,note);\n  }\n    \n \n\n  };\n\n\n  const noteChangeHandler = (e) => {\n    setKey(e.target.value);\n  };\n\n  const durChangeHandler = (e) => {\n    setNote(e.target.value);\n  };\n\n  const [keyVal, setKey] = useState(\"C2\");\n  const [note, setNote] = useState(\"3\");\n\n\n  return (\n    <div className=\"App\">\n    <div className=\"SynthInput\">\n    <div className=\"leftInput\"> ENTER NOTE (such as C2)  <input className=\"noteInput\" onChange={noteChangeHandler}/></div>\n    <div className=\"rightInput\">ENTER DURATION (such as 3)  <input className=\"noteInput\" onChange={durChangeHandler}/></div>\n    </div>\n      <h1 className=\"mainLogo\"> R a h u l s y n t h </h1>\n      <button className=\"playbutton\" onClick={playSynth}> Play {keyVal} for {note}</button>\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}